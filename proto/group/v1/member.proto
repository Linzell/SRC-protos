// Copyright Charlie Cohen <linzellart@gmail.com>
//
// Licensed under the GNU General Public License, Version 3.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.gnu.org/licenses/gpl-3.0.html
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// List of available options:
// https://github.com/yoheimuta/protolint/blob/master/_example/config/.protolint.yaml

syntax = "proto3";

package group.v1;

import "google/api/field_behavior.proto";

// Role
//
// Represents the role of a user.
//
// Fields:
//
// - ROLE_OWNER: Unspecified role.
// - ROLE_ADMIN: Admin role.
// - ROLE_USER: User role.
enum Role {
    // ROLE_OWNER: Unspecified role.
    ROLE_OWNER = 0;
    // ROLE_ADMIN: Admin role.
    ROLE_ADMIN = 1;
    // ROLE_USER: User role.
    ROLE_USER = 2;
}

// Member
//
// Represents a member of a group.
//
// Fields:
//
// - cid: The unique identifier of the member.
// - role: The role of the member.
// - name: The name of the member.
// - avatar: The avatar of the member.
message Member {
    // cid: The unique identifier of the member.
    string cid = 1 [(google.api.field_behavior) = OUTPUT_ONLY];
    // role: The role of the member.
    Role role = 2 [(google.api.field_behavior) = INPUT_ONLY];
    // name: The name of the member.
    string name = 3 [(google.api.field_behavior) = OUTPUT_ONLY];
    // avatar: The avatar of the member.
    string avatar = 4 [(google.api.field_behavior) = OUTPUT_ONLY];
}

// AddMemberRequest
//
// Request to add a member to a group.
//
// Fields:
//
// - group_cid: The unique identifier of the group.
// - cid: The unique identifier of the member.
message AddMemberRequest {
    // group_cid: The unique identifier of the group.
    string group_cid = 1 [(google.api.field_behavior) = REQUIRED];
    // cid: The unique identifier of the member.
    string cid = 2 [(google.api.field_behavior) = REQUIRED];
}

// RemoveMemberRequest
//
// Request to remove a member from a group.
//
// Fields:
//
// - group_cid: The unique identifier of the group.
// - cid: The unique identifier of the member.
message RemoveMemberRequest {
    // group_cid: The unique identifier of the group.
    string group_cid = 1 [(google.api.field_behavior) = REQUIRED];
    // cid: The unique identifier of the member.
    string cid = 2 [(google.api.field_behavior) = REQUIRED];
}

// UpdateMemberRoleRequest
//
// Request to update the role of a member.
//
// Fields:
//
// - group_cid: The unique identifier of the group.
// - cid: The unique identifier of the member.
// - role: The new role of the member.
message UpdateMemberRoleRequest {
    // group_cid: The unique identifier of the group.
    string group_cid = 1 [(google.api.field_behavior) = REQUIRED];
    // cid: The unique identifier of the member.
    string cid = 2 [(google.api.field_behavior) = REQUIRED];
    // role: The new role of the member.
    Role role = 3 [(google.api.field_behavior) = REQUIRED];
}
